# Generated by Django 2.2.8 on 2020-10-21 16:40

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='brands/')),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '6. MARQUES',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_id', models.CharField(default='', max_length=100)),
                ('cat_name', models.CharField(default='', max_length=100)),
                ('cat_short_name', models.CharField(default='', max_length=100)),
                ('level', models.CharField(default=1, max_length=1)),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '5. CATEGORIES',
                'ordering': ['cat_name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(max_length=15)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '3. CONTACTS',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='GROUPES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name_plural': '4. GROUPES',
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TYPE', models.CharField(default='', max_length=200)),
                ('PRODUIT', models.CharField(default='', max_length=200)),
                ('PARTICULARITE', models.CharField(default='', max_length=200)),
                ('IMAGE', models.ImageField(default='default.jpg', upload_to='HomePage/')),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '----- DIAPORAMA -----',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='IngredientList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TITLE', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name_plural': '7. INGREDIENTS LIST',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '8. REGIONS',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Utility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Lundi', models.CharField(default='8:00 – 12:00 / 14:00 – 17:00', max_length=100)),
                ('Mardi', models.CharField(default='8:00 – 12:00 / 14:00 – 17:00', max_length=100)),
                ('Mercredi', models.CharField(default='8:00 – 12:00', max_length=100)),
                ('Jeudi', models.CharField(default='8:00 – 12:00 / 14:00 – 17:00', max_length=100)),
                ('Vendredi', models.CharField(default='8:00 – 12:00 / 14:00 – 17:00', max_length=100)),
                ('Samedi', models.CharField(default='Fermé', max_length=100)),
                ('Dimanche', models.CharField(default='Fermé', max_length=100)),
                ('Adresse', models.CharField(default='Impasse Georges Claude, Z.I. Jarry, 97122 Baie-Mahault, Guadeloupe', max_length=200)),
                ('Telephone', models.CharField(default='+590 (0) 590 26 73 20', max_length=100)),
                ('Email', models.CharField(default='info@sofadig.net', max_length=100)),
            ],
            options={
                'verbose_name_plural': '-----  RENSEIGNEMENTS ----',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
            ],
            options={
                'verbose_name_plural': '10. SUB CATEGORIES',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Region')),
            ],
            options={
                'verbose_name_plural': '2. MAGASINS',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('HYP', models.BooleanField(default=False)),
                ('SUP', models.BooleanField(default=False)),
                ('MINI', models.BooleanField(default=False)),
                ('CODE', models.CharField(default='', max_length=200)),
                ('DESIGNATION', models.CharField(default='', max_length=200)),
                ('DESCRIPTION', models.TextField(default='')),
                ('PCB', models.IntegerField(default=0)),
                ('SIZE', models.CharField(default='', max_length=100)),
                ('GENCODE', models.CharField(default='', max_length=100)),
                ('IMAGE', models.ImageField(default='default.jpg', upload_to='Products/')),
                ('date', models.DateField(auto_now_add=True)),
                ('slug', models.SlugField(unique=True)),
                ('BRAND', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Brand')),
                ('CATEGORIE', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
                ('GROUPE_PRODUIT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.GROUPES')),
                ('INGREDIENTS', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.IngredientList')),
            ],
            options={
                'verbose_name_plural': '1. PRODUITS',
                'ordering': ['DESIGNATION'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NAME', models.CharField(blank=True, max_length=100, null=True)),
                ('AMT', models.CharField(blank=True, max_length=100, null=True)),
                ('ING_LIST', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.IngredientList')),
            ],
            options={
                'verbose_name_plural': '9. INGREDIENTS',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_client', models.BooleanField(default=True)),
                ('is_commercial', models.BooleanField(default=False)),
                ('is_marketing', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
